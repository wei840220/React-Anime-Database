{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","onClick","item","handleClick","style","backgroundImage","imageUrl","title","desc","CardList","anime","map","image_url","genres","slice","g","name","join","window","open","url","mal_id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","filter","a","r18","kids","continuing","this","filteredAnime","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAiBC,QAAUF,EAAMG,KAAKC,YAArD,UACI,qBAAKH,UAAU,aAAaI,MAAQ,CAACC,gBAAgB,OAAD,OAASN,EAAMG,KAAKI,SAApB,QACpD,sBAAKN,UAAU,aAAf,cAA+BD,EAAMG,KAAKK,MAA1C,OACA,sBAAKP,UAAU,YAAf,cAA8BD,EAAMG,KAAKM,KAAzC,WCFKC,G,MAAW,SAACV,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACID,EAAMW,MAAMC,KAAI,SAAAD,GAAK,OACjB,cAAC,EAAD,CAAyBR,KACrB,CACII,SAAUI,EAAME,UAChBL,MAAOG,EAAMH,MACbC,KAAME,EAAMG,OAAOC,MAAM,EAAG,GAAGH,KAAI,SAACI,GAAD,OAAOA,EAAEC,QAAMC,KAAK,MACvDd,YAAa,kBAAMe,OAAOC,KAAKT,EAAMU,QALlCV,EAAMW,eCLhBC,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACExB,UAAU,aACVyB,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC6CFG,G,wDA/Cb,aAAe,IAAD,8BACZ,gBAuBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAtBtC,EAAKC,MAAQ,CACXvB,MAAO,GACPoB,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAMlBI,MAAM,mCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAC1BnB,MAAO4B,EAAK5B,MAAM6B,QAAO,SAACC,GACxB,MAAkB,OAAXA,EAAEf,OAA2B,IAAVe,EAAEC,MAA4B,IAAXD,EAAEE,OAAmC,IAAjBF,EAAEG,qB,oBAS7E,WAAU,IAAD,EACwBC,KAAKX,MAA5BvB,EADD,EACCA,MAAOoB,EADR,EACQA,YACTe,EAAgBnC,EAAM6B,QAAO,SAACC,GAClC,OAAOA,EAAEjC,MAAMuC,cAAcC,SAASjB,EAAYgB,kBAGpD,OACE,sBAAK9C,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEuB,YAAY,gBACZC,aAAeoB,KAAKpB,eAEtB,cAAC,EAAD,CAAUd,MAAQmC,W,GA1CRG,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1b115c69.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container' onClick={ props.item.handleClick } >\r\n        <div className='card-image' style={ {backgroundImage: `url(${props.item.imageUrl})`} }></div>\r\n        <div className='card-title'> { props.item.title } </div>\r\n        <div className='card-desc'> { props.item.desc } </div>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>{\r\n        props.anime.map(anime => (\r\n            <Card key={anime.mal_id} item={\r\n                {\r\n                    imageUrl: anime.image_url,\r\n                    title: anime.title,\r\n                    desc: anime.genres.slice(0, 3).map((g) => g.name).join(', '),\r\n                    handleClick: () => window.open(anime.url)\r\n                }\r\n            }/>\r\n        ))\r\n    }</div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input \r\n      className='search-box'\r\n      type='search'\r\n      placeholder= {placeholder }\r\n      onChange={ handleChange } \r\n    />\r\n  )\r\n};\r\n","import { Component } from 'react';\r\n\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      anime: [],\r\n      searchField: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    /*\r\n      Jikan - The Unofficial MyAnimeList API\r\n      See here: https://github.com/jikan-me/jikan\r\n      Read docs: https://jikan.docs.apiary.io/#reference/0/season\r\n    */\r\n    fetch('https://api.jikan.moe/v3/season')\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({\r\n          anime: data.anime.filter((a) => {\r\n            return a.type === 'TV' && a.r18 === false && a.kids === false && a.continuing === false\r\n          })\r\n      }))\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { anime, searchField } = this.state;\r\n    const filteredAnime = anime.filter((a) => {\r\n      return a.title.toLowerCase().includes(searchField.toLowerCase())\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>EXPLORE ANIME</h1>\r\n        <SearchBox \r\n          placeholder='want to find?'\r\n          handleChange={ this.handleChange }\r\n        />\r\n        <CardList anime={ filteredAnime } />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}